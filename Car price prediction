import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Hypothetical dataset (for demonstration purposes)
data = {
    'mileage': [50000, 30000, 70000, 80000, 60000, 90000, 10000, 20000],
    'age': [5, 3, 7, 8, 6, 9, 1, 2],
    'condition': ['good', 'excellent', 'fair', 'good', 'excellent', 'fair', 'excellent', 'good'],
    'price': [15000, 20000, 12000, 14000, 18000, 10000, 25000, 22000]
}
car_data = pd.DataFrame(data)

# Preprocessing: Extract features and target variable
X = car_data[['mileage', 'age', 'condition']]
y = car_data['price']

# Convert categorical variable 'condition' to dummy/indicator variables
X = pd.get_dummies(X, columns=['condition'], drop_first=True)

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared Score:", r2)
